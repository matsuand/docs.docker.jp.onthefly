%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker buildx imagetools create
short: Create a new image based on source images
long: |-
  Imagetools contains commands for working with manifest lists in the registry.
  These commands are useful for inspecting multi-platform build results.

  Create a new manifest list based on source manifests. The source manifests can
  be manifest lists or single platform distribution manifests and must already
  exist in the registry where the new manifest is created. If only one source is
  specified, create performs a carbon copy.
@y
command: docker buildx imagetools create
short: ソースイメージに基づいて新たなイメージを生成します。
long: |-
  Imagetools contains commands for working with manifest lists in the registry.
  These commands are useful for inspecting multi-platform build results.

  Create a new manifest list based on source manifests. The source manifests can
  be manifest lists or single platform distribution manifests and must already
  exist in the registry where the new manifest is created. If only one source is
  specified, create performs a carbon copy.
@z

@x
usage: docker buildx imagetools create [OPTIONS] [SOURCE] [SOURCE...]
pname: docker buildx imagetools
plink: docker_buildx_imagetools.yaml
options:
@y
usage: docker buildx imagetools create [オプション] [SOURCE] [SOURCE...]
pname: docker buildx imagetools
plink: docker_buildx_imagetools.yaml
options:
@z

@x
- option: append
  value_type: bool
  default_value: "false"
  description: Append to existing manifest
  details_url: '#append'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: append
  value_type: bool
  default_value: "false"
  description: 既存のマニフェストに追加します。
  details_url: '#append'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: dry-run
  value_type: bool
  default_value: "false"
  description: Show final image instead of pushing
  details_url: '#dry-run'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: dry-run
  value_type: bool
  default_value: "false"
  description: プッシュを行わずに、最終イメージを表示します。
  details_url: '#dry-run'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: file
  shorthand: f
  value_type: stringArray
  default_value: '[]'
  description: Read source descriptor from file
  details_url: '#file'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: file
  shorthand: f
  value_type: stringArray
  default_value: '[]'
  description: ファイルからソースディスクリプターを読み込みます。
  details_url: '#file'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: tag
  shorthand: t
  value_type: stringArray
  default_value: '[]'
  description: Set reference for new image
  details_url: '#tag'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: tag
  shorthand: t
  value_type: stringArray
  default_value: '[]'
  description: 新規イメージへのリファレンスを設定します。
  details_url: '#tag'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
inherited_options:
- option: builder
  value_type: string
  description: Override the configured builder instance
  details_url: '#builder'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
inherited_options:
- option: builder
  value_type: string
  description: 設定された builder インスタンスをオーバーライドします。
  details_url: '#builder'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  ### Append new sources to an existing manifest list (--append) {#append}
@y
examples: |-
  ### Append new sources to an existing manifest list (--append) {#append}
@z

@x
  Use the `--append` flag to append the new sources to an existing manifest list
  in the destination.
@y
  Use the `--append` flag to append the new sources to an existing manifest list
  in the destination.
@z

@x
  ### Override the configured builder instance (--builder) {#builder}
@y
  ### Override the configured builder instance (--builder) {#builder}
@z

@x
  Same as [`buildx --builder`](buildx.md#builder).
@y
  Same as [`buildx --builder`](buildx.md#builder).
@z

@x
  ### Show final image instead of pushing (--dry-run) {#dry-run}
@y
  ### Show final image instead of pushing (--dry-run) {#dry-run}
@z

@x
  Use the `--dry-run` flag to not push the image, just show it.
@y
  Use the `--dry-run` flag to not push the image, just show it.
@z

@x
  ### Read source descriptor from a file (-f, --file) {#file}
@y
  ### Read source descriptor from a file (-f, --file) {#file}
@z

@x
  ```
  -f FILE or --file FILE
  ```
@y
  ```
  -f FILE or --file FILE
  ```
@z

@x
  Reads source from files. A source can be a manifest digest, manifest reference,
  or a JSON of OCI descriptor object.
@y
  Reads source from files. A source can be a manifest digest, manifest reference,
  or a JSON of OCI descriptor object.
@z

@x
  In order to define annotations or additional platform properties like `os.version` and
  `os.features` you need to add them in the OCI descriptor object encoded in JSON.
@y
  In order to define annotations or additional platform properties like `os.version` and
  `os.features` you need to add them in the OCI descriptor object encoded in JSON.
@z

@x
  ```
  docker buildx imagetools inspect --raw alpine | jq '.manifests[0] | .platform."os.version"="10.1"' > descr.json
  docker buildx imagetools create -f descr.json myuser/image
  ```
@y
  ```
  docker buildx imagetools inspect --raw alpine | jq '.manifests[0] | .platform."os.version"="10.1"' > descr.json
  docker buildx imagetools create -f descr.json myuser/image
  ```
@z

@x
  The descriptor in the file is merged with existing descriptor in the registry if it exists.
@y
  The descriptor in the file is merged with existing descriptor in the registry if it exists.
@z

@x
  The supported fields for the descriptor are defined in [OCI spec](https://github.com/opencontainers/image-spec/blob/master/descriptor.md#properties) .
@y
  The supported fields for the descriptor are defined in [OCI spec](https://github.com/opencontainers/image-spec/blob/master/descriptor.md#properties) .
@z

@x
  ### Set reference for new image  (-t, --tag) {#tag}
@y
  ### Set reference for new image  (-t, --tag) {#tag}
@z

@x
  ```
  -t IMAGE or --tag IMAGE
  ```
@y
  ```
  -t IMAGE or --tag IMAGE
  ```
@z

@x
  Use the `-t` or `--tag` flag to set the name of the image to be created.
@y
  Use the `-t` or `--tag` flag to set the name of the image to be created.
@z

@x
  **Examples**
@y
  **Examples**
@z

@x
  ```console
  $ docker buildx imagetools create --dry-run alpine@sha256:5c40b3c27b9f13c873fefb2139765c56ce97fd50230f1f2d5c91e55dec171907 sha256:c4ba6347b0e4258ce6a6de2401619316f982b7bcc529f73d2a410d0097730204

  $ docker buildx imagetools create -t tonistiigi/myapp -f image1 -f image2
  ```
@y
  ```console
  $ docker buildx imagetools create --dry-run alpine@sha256:5c40b3c27b9f13c873fefb2139765c56ce97fd50230f1f2d5c91e55dec171907 sha256:c4ba6347b0e4258ce6a6de2401619316f982b7bcc529f73d2a410d0097730204

  $ docker buildx imagetools create -t tonistiigi/myapp -f image1 -f image2
  ```
@z

@x
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@y
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@z
