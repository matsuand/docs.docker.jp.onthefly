%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker images
short: List images
@y
command: docker images
short: イメージを一覧表示します。
@z

@x
long: |-
  The default `docker images` will show all top level
  images, their repository and tags, and their size.
@y
long: |-
  `docker images`はデフォルトで、すべてのトップレベルイメージ、そのリポジトリとタグ、そのサイズを表示します。
@z

@x
  Docker images have intermediate layers that increase reusability,
  decrease disk usage, and speed up `docker build` by
  allowing each step to be cached. These intermediate layers are not shown
  by default.
@y
  Docker イメージには中間レイヤーが含まれるため、ディスク容量を必要としますが再利用性は増えます。
  したがって`docker build`の各処理ステップにおけるキャッシュの利用によって、処理速度が向上します。
  そのような中間レイヤーはデフォルトでは表示されません。
@z

@x
  The `SIZE` is the cumulative space taken up by the image and all
  its parent images. This is also the disk space used by the contents of the
  Tar file created when you `docker save` an image.
@y
  `SIZE`はイメージと親イメージによって占有される合計サイズです。
  これはまた、`docker save`によりイメージを生成した際の tar ファイルのディスク容量でもあります。
@z

@x
  An image will be listed more than once if it has multiple repository names
  or tags. This single image (identifiable by its matching `IMAGE ID`)
  uses up the `SIZE` listed only once.
@y
  イメージが複数のリポジトリ名やタグを持っている場合は、一覧に複数回表示されます。
  その 1 つのイメージ（`IMAGE ID`が一致するもの）の`SIZE`欄に同一サイズが示されます。
@z

@x
usage: docker images [OPTIONS] [REPOSITORY[:TAG]]
pname: docker
plink: docker.yaml
options:
@y
usage: docker images [オプション] [REPOSITORY[:TAG]]
pname: docker
plink: docker.yaml
options:
@z

@x
- option: all
  shorthand: a
  value_type: bool
  default_value: "false"
  description: Show all images (default hides intermediate images)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: all
  shorthand: a
  value_type: bool
  default_value: "false"
  description: イメージをすべて表示します。（デフォルトでは中間イメージが表示されません。）
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: digests
  value_type: bool
  default_value: "false"
  description: Show digests
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: digests
  value_type: bool
  default_value: "false"
  description: ダイジェスト値を表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: filter
  shorthand: f
  value_type: filter
  description: Filter output based on conditions provided
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: format
  value_type: string
  description: Pretty-print images using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: format
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: no-trunc
  value_type: bool
  default_value: "false"
  description: Don't truncate output
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: no-trunc
  value_type: bool
  default_value: "false"
  description: 詳細出力を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: Only show image IDs
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: イメージ ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  ### List the most recently created images
@y
examples: |-
  {: #list-the-most-recently-created-images }
  ### 最近生成したイメージの一覧
@z

@x
  ```console
  $ docker images

  REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE
  <none>                    <none>              77af4d6b9913        19 hours ago        1.089 GB
  committ                   latest              b6fa739cedf5        19 hours ago        1.089 GB
  <none>                    <none>              78a85c484f71        19 hours ago        1.089 GB
  docker                    latest              30557a29d5ab        20 hours ago        1.089 GB
  <none>                    <none>              5ed6274db6ce        24 hours ago        1.089 GB
  postgres                  9                   746b819f315e        4 days ago          213.4 MB
  postgres                  9.3                 746b819f315e        4 days ago          213.4 MB
  postgres                  9.3.5               746b819f315e        4 days ago          213.4 MB
  postgres                  latest              746b819f315e        4 days ago          213.4 MB
  ```
@y
  ```console
  $ docker images

  REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE
  <none>                    <none>              77af4d6b9913        19 hours ago        1.089 GB
  committ                   latest              b6fa739cedf5        19 hours ago        1.089 GB
  <none>                    <none>              78a85c484f71        19 hours ago        1.089 GB
  docker                    latest              30557a29d5ab        20 hours ago        1.089 GB
  <none>                    <none>              5ed6274db6ce        24 hours ago        1.089 GB
  postgres                  9                   746b819f315e        4 days ago          213.4 MB
  postgres                  9.3                 746b819f315e        4 days ago          213.4 MB
  postgres                  9.3.5               746b819f315e        4 days ago          213.4 MB
  postgres                  latest              746b819f315e        4 days ago          213.4 MB
  ```
@z

@x
  ### List images by name and tag
@y
  {: #list-images-by-name-and-tag }
  ### 名前とタグ指定によるイメージ一覧
@z

@x
  The `docker images` command takes an optional `[REPOSITORY[:TAG]]` argument
  that restricts the list to images that match the argument. If you specify
  `REPOSITORY`but no `TAG`, the `docker images` command lists all images in the
  given repository.
@y
  `docker images`コマンドには任意に指定できる`[REPOSITORY[:TAG]]`引数があります。
  この引数に合致するものだけが一覧出力されます。
  `REPOSITORY`だけ指定し`TAG`を指定しなかった場合、`docker images`コマンドは指定されたリポジトリ内にあるイメージをすべて一覧表示します。
@z

@x
  For example, to list all images in the "java" repository, run this command :
@y
  たとえば「java」リポジトリのイメージすべてを表示するには、以下のコマンドを実行します。
@z

@x
  ```console
  $ docker images java

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  java                8                   308e519aac60        6 days ago          824.5 MB
  java                7                   493d82594c15        3 months ago        656.3 MB
  java                latest              2711b1d6f3aa        5 months ago        603.9 MB
  ```
@y
  ```console
  $ docker images java

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  java                8                   308e519aac60        6 days ago          824.5 MB
  java                7                   493d82594c15        3 months ago        656.3 MB
  java                latest              2711b1d6f3aa        5 months ago        603.9 MB
  ```
@z

@x
  The `[REPOSITORY[:TAG]]` value must be an "exact match". This means that, for example,
  `docker images jav` does not match the image `java`.
@y
  `[REPOSITORY[:TAG]]`の値は完全に一致するものを指定しなければなりません。
  たとえば`docker images jav`を実行しても、イメージ名`java`には一致しません。
@z

@x
  If both `REPOSITORY` and `TAG` are provided, only images matching that
  repository and tag are listed.  To find all local images in the "java"
  repository with tag "8" you can use:
@y
  `REPOSITORY`と`TAG`の両方を指定した場合、リポジトリとタグが一致したイメージのみが一覧表示されます。
  「java」リポジトリにあるローカルイメージで「8」というタグを持つものを検索するには、以下のようにします。
@z

@x
  ```console
  $ docker images java:8

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  java                8                   308e519aac60        6 days ago          824.5 MB
  ```
@y
  ```console
  $ docker images java:8

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  java                8                   308e519aac60        6 days ago          824.5 MB
  ```
@z

@x
  If nothing matches `REPOSITORY[:TAG]`, the list is empty.
@y
  `REPOSITORY[:TAG]`に一致するものがなければ、一覧には何も表示されません。
@z

@x
  ```console
  $ docker images java:0

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  ```
@y
  ```console
  $ docker images java:0

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  ```
@z

@x
  ### List the full length image IDs
@y
  {: #list-the-full-length-image-ids }
  ### 完全なイメージ ID による一覧表示
@z

@x
  ```console
  $ docker images --no-trunc

  REPOSITORY                    TAG                 IMAGE ID                                                                  CREATED             SIZE
  <none>                        <none>              sha256:77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182   19 hours ago        1.089 GB
  committest                    latest              sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f   19 hours ago        1.089 GB
  <none>                        <none>              sha256:78a85c484f71509adeaace20e72e941f6bdd2b25b4c75da8693efd9f61a37921   19 hours ago        1.089 GB
  docker                        latest              sha256:30557a29d5abc51e5f1d5b472e79b7e296f595abcf19fe6b9199dbbc809c6ff4   20 hours ago        1.089 GB
  <none>                        <none>              sha256:0124422dd9f9cf7ef15c0617cda3931ee68346455441d66ab8bdc5b05e9fdce5   20 hours ago        1.089 GB
  <none>                        <none>              sha256:18ad6fad340262ac2a636efd98a6d1f0ea775ae3d45240d3418466495a19a81b   22 hours ago        1.082 GB
  <none>                        <none>              sha256:f9f1e26352f0a3ba6a0ff68167559f64f3e21ff7ada60366e2d44a04befd1d3a   23 hours ago        1.089 GB
  tryout                        latest              sha256:2629d1fa0b81b222fca63371ca16cbf6a0772d07759ff80e8d1369b926940074   23 hours ago        131.5 MB
  <none>                        <none>              sha256:5ed6274db6ceb2397844896966ea239290555e74ef307030ebb01ff91b1914df   24 hours ago        1.089 GB
  ```
@y
  ```console
  $ docker images --no-trunc

  REPOSITORY                    TAG                 IMAGE ID                                                                  CREATED             SIZE
  <none>                        <none>              sha256:77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182   19 hours ago        1.089 GB
  committest                    latest              sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f   19 hours ago        1.089 GB
  <none>                        <none>              sha256:78a85c484f71509adeaace20e72e941f6bdd2b25b4c75da8693efd9f61a37921   19 hours ago        1.089 GB
  docker                        latest              sha256:30557a29d5abc51e5f1d5b472e79b7e296f595abcf19fe6b9199dbbc809c6ff4   20 hours ago        1.089 GB
  <none>                        <none>              sha256:0124422dd9f9cf7ef15c0617cda3931ee68346455441d66ab8bdc5b05e9fdce5   20 hours ago        1.089 GB
  <none>                        <none>              sha256:18ad6fad340262ac2a636efd98a6d1f0ea775ae3d45240d3418466495a19a81b   22 hours ago        1.082 GB
  <none>                        <none>              sha256:f9f1e26352f0a3ba6a0ff68167559f64f3e21ff7ada60366e2d44a04befd1d3a   23 hours ago        1.089 GB
  tryout                        latest              sha256:2629d1fa0b81b222fca63371ca16cbf6a0772d07759ff80e8d1369b926940074   23 hours ago        131.5 MB
  <none>                        <none>              sha256:5ed6274db6ceb2397844896966ea239290555e74ef307030ebb01ff91b1914df   24 hours ago        1.089 GB
  ```
@z

@x
  ### List image digests
@y
  {: #list-image-digests }
  ### イメージダイジェストの一覧表示
@z

@x
  Images that use the v2 or later format have a content-addressable identifier
  called a `digest`. As long as the input used to generate the image is
  unchanged, the digest value is predictable. To list image digest values, use
  the `--digests` flag:
@y
  イメージ仕様の v2 またはそれ以降を利用するイメージには、`digest`（ダイジェスト）と呼ぶ連想識別子（content-addressable identifier）があります。
  イメージ生成に用いられた入力内容が変更されていない限り、ダイジェスト値は予測できます。
  イメージダイジェストの一覧を表示するには`--digests`フラグを利用します。
@z

@x
  ```console
  $ docker images --digests
  REPOSITORY                         TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE
  localhost:5000/test/busybox        <none>              sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf   4986bf8c1536        9 weeks ago         2.43 MB
  ```
@y
  ```console
  $ docker images --digests
  REPOSITORY                         TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE
  localhost:5000/test/busybox        <none>              sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf   4986bf8c1536        9 weeks ago         2.43 MB
  ```
@z

@x
  When pushing or pulling to a 2.0 registry, the `push` or `pull` command
  output includes the image digest. You can `pull` using a digest value. You can
  also reference by digest in `create`, `run`, and `rmi` commands, as well as the
  `FROM` image reference in a Dockerfile.
@y
  レジストリバージョン 2.0 に対してプッシュやプルを行う際には、`push`や`pull`コマンドの出力にイメージダイジェストが表示されます。
  `pull`の際にダイジェスト値を用いることが可能であり、`create`、`run`、`rmi`といったコマンドにおいてはダイジェスト値を使ってイメージを参照することもできます。
  また Dockerfile 内での`FROM`において、イメージを参照するために用いることもできます。
@z

@x
  ### Filtering
@y
  {: #filtering }
  ### フィルター検索
@z

@x
  The filtering flag (`-f` or `--filter`) format is of "key=value". If there is more
  than one filter, then pass multiple flags (e.g., `--filter "foo=bar" --filter "bif=baz"`)
@y
  フィルターフラグ（`-f` または `--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば `--filter "foo=bar" --filter "bif=baz"` など。）
@z

@x
  The currently supported filters are:
@y
  現在サポートされているフィルターは以下のとおりです。
@z

@x
  * dangling (boolean - true or false)
  * label (`label=<key>` or `label=<key>=<value>`)
  * before (`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`) - filter images created before given id or references
  * since (`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`) - filter images created since given id or references
  * reference (pattern of an image reference) - filter images whose reference matches the specified pattern
@y
  * dangling (ブール値 - true または false)
  * label (`label=<key>` または `label=<key>=<value>`)
  * before (`<image-name>[:<tag>]`,`<image id>`または`<image@digest>`) - 指定された ID または参照名より以前に生成されたイメージを検索。
  * since (`<image-name>[:<tag>]`,`<image id>`または`<image@digest>`) - 指定された ID または参照名より以降に生成されたイメージを検索。
  * 参照名（イメージ参照のパターン） - 参照名が指定パターンに一致するイメージを検索。
@z

@x
  #### Show untagged images (dangling)
@y
  {: #show-untagged-images-dangling }
  #### タグづけなしイメージの表示 (dangling)
@z

@x
  ```console
  $ docker images --filter "dangling=true"

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  <none>              <none>              8abc22fbb042        4 weeks ago         0 B
  <none>              <none>              48e5f45168b9        4 weeks ago         2.489 MB
  <none>              <none>              bf747efa0e2f        4 weeks ago         0 B
  <none>              <none>              980fe10e5736        12 weeks ago        101.4 MB
  <none>              <none>              dea752e4e117        12 weeks ago        101.4 MB
  <none>              <none>              511136ea3c5a        8 months ago        0 B
  ```
@y
  ```console
  $ docker images --filter "dangling=true"

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  <none>              <none>              8abc22fbb042        4 weeks ago         0 B
  <none>              <none>              48e5f45168b9        4 weeks ago         2.489 MB
  <none>              <none>              bf747efa0e2f        4 weeks ago         0 B
  <none>              <none>              980fe10e5736        12 weeks ago        101.4 MB
  <none>              <none>              dea752e4e117        12 weeks ago        101.4 MB
  <none>              <none>              511136ea3c5a        8 months ago        0 B
  ```
@z

@x
  This will display untagged images that are the leaves of the images tree (not
  intermediary layers). These images occur when a new build of an image takes the
  `repo:tag` away from the image ID, leaving it as `<none>:<none>` or untagged.
  A warning will be issued if trying to remove an image when a container is presently
  using it. By having this flag it allows for batch cleanup.
@y
  これは、イメージツリーの葉にあたる（中間レイヤーではない）、タグづけされていないイメージを表示します。
  そのようなイメージは新規ビルドの際に、イメージ ID から`repo:tag`が取り除かれることで発生し、`<none>:<none>`やタグなしの状態になります。
  コンテナーがイメージをまだ利用している状態で、そのイメージを削除しようとすると、警告メッセージが表示されます。
  このフラグを指定して、バッチ処理による削除が可能になります。
@z

@x
  You can use this in conjunction with `docker rmi ...`:
@y
  つまり`docker rmi ...`と合わせて以下のようにします。
@z

@x
  ```console
  $ docker rmi $(docker images -f "dangling=true" -q)

  8abc22fbb042
  48e5f45168b9
  bf747efa0e2f
  980fe10e5736
  dea752e4e117
  511136ea3c5a
  ```
@y
  ```console
  $ docker rmi $(docker images -f "dangling=true" -q)

  8abc22fbb042
  48e5f45168b9
  bf747efa0e2f
  980fe10e5736
  dea752e4e117
  511136ea3c5a
  ```
@z

@x
  Docker warns you if any containers exist that are using these untagged images.
@y
  タグづけされていないイメージをまだ利用するコンテナーが存在していたときは、警告が表示されます。
@z

@x
  #### Show images with a given label
@y
  {: #show-images-with-a-given-label }
  #### ラベル指定によるイメージの表示
@z

@x
  The `label` filter matches images based on the presence of a `label` alone or a `label` and a
  value.
@y
  `label`フィルターは、イメージが`label`単体を持つか、あるいは`label`とその値を持つものを検索します。
@z

@x
  The following filter matches images with the `com.example.version` label regardless of its value.
@y
  以下のフィルター指定は、ラベルとして`com.example.version`を持つものを検索し、その値は問いません。
@z

@x
  ```console
  $ docker images --filter "label=com.example.version"

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  match-me-1          latest              eeae25ada2aa        About a minute ago   188.3 MB
  match-me-2          latest              dea752e4e117        About a minute ago   188.3 MB
  ```
@y
  ```console
  $ docker images --filter "label=com.example.version"

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  match-me-1          latest              eeae25ada2aa        About a minute ago   188.3 MB
  match-me-2          latest              dea752e4e117        About a minute ago   188.3 MB
  ```
@z

@x
  The following filter matches images with the `com.example.version` label with the `1.0` value.
@y
  以下のフィルター指定は、ラベルとして`com.example.version`を持ち、その値が`1.0`であるものを検索します。
@z

@x
  ```console
  $ docker images --filter "label=com.example.version=1.0"

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  match-me            latest              511136ea3c5a        About a minute ago   188.3 MB
  ```
@y
  ```console
  $ docker images --filter "label=com.example.version=1.0"

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  match-me            latest              511136ea3c5a        About a minute ago   188.3 MB
  ```
@z

@x
  In this example, with the `0.1` value, it returns an empty set because no matches were found.
@y
  以下の例では、ラベルの値として`0.1`を持つものを検索しますが、一致するものがなかったとして結果が空となったことを表わします。
@z

@x
  ```console
  $ docker images --filter "label=com.example.version=0.1"
  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  ```
@y
  ```console
  $ docker images --filter "label=com.example.version=0.1"
  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  ```
@z

@x
  #### Filter images by time
@y
  {: #filter-images-by-time }
  #### 時刻指定によるイメージ検索
@z

@x
  The `before` filter shows only images created before the image with
  given id or reference. For example, having these images:
@y
  `before`フィルターは、指定された ID または参照名を持つイメージより以前に生成されたイメージのみを表示します。
  たとえばはじめに以下のイメージがあったとします。
@z

@x
  ```console
  $ docker images

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  image1              latest              eeae25ada2aa        4 minutes ago        188.3 MB
  image2              latest              dea752e4e117        9 minutes ago        188.3 MB
  image3              latest              511136ea3c5a        25 minutes ago       188.3 MB
  ```
@y
  ```console
  $ docker images

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  image1              latest              eeae25ada2aa        4 minutes ago        188.3 MB
  image2              latest              dea752e4e117        9 minutes ago        188.3 MB
  image3              latest              511136ea3c5a        25 minutes ago       188.3 MB
  ```
@z

@x
  Filtering with `before` would give:
@y
  `before`のフィルタリング結果として以下が得られます。
@z

@x
  ```console
  $ docker images --filter "before=image1"

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  image2              latest              dea752e4e117        9 minutes ago        188.3 MB
  image3              latest              511136ea3c5a        25 minutes ago       188.3 MB
  ```
@y
  ```console
  $ docker images --filter "before=image1"

  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  image2              latest              dea752e4e117        9 minutes ago        188.3 MB
  image3              latest              511136ea3c5a        25 minutes ago       188.3 MB
  ```
@z

@x
  Filtering with `since` would give:
@y
  `since`のフィルタリング結果は以下です。
@z

@x
  ```console
  $ docker images --filter "since=image3"
  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  image1              latest              eeae25ada2aa        4 minutes ago        188.3 MB
  image2              latest              dea752e4e117        9 minutes ago        188.3 MB
  ```
@y
  ```console
  $ docker images --filter "since=image3"
  REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
  image1              latest              eeae25ada2aa        4 minutes ago        188.3 MB
  image2              latest              dea752e4e117        9 minutes ago        188.3 MB
  ```
@z

@x
  #### Filter images by reference
@y
  {: #filter-images-by-reference }
  #### 参照名によりイメージ検索
@z

@x
  The `reference` filter shows only images whose reference matches
  the specified pattern.
@y
  `reference`フィルターは、参照名が指定されたパターンに一致するイメージのみを表示します。
@z

@x
  ```console
  $ docker images

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  busybox             latest              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             uclibc              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             musl                733eb3059dce        5 weeks ago         1.21 MB
  busybox             glibc               21c16b6787c6        5 weeks ago         4.19 MB
  ```
@y
  ```console
  $ docker images

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  busybox             latest              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             uclibc              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             musl                733eb3059dce        5 weeks ago         1.21 MB
  busybox             glibc               21c16b6787c6        5 weeks ago         4.19 MB
  ```
@z

@x
  Filtering with `reference` would give:
@y
  `reference`のフィルタリング結果は以下です。
@z

@x
  ```console
  $ docker images --filter=reference='busy*:*libc'

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  busybox             uclibc              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             glibc               21c16b6787c6        5 weeks ago         4.19 MB
  ```
@y
  ```console
  $ docker images --filter=reference='busy*:*libc'

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  busybox             uclibc              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             glibc               21c16b6787c6        5 weeks ago         4.19 MB
  ```
@z

@x
  Filtering with multiple `reference` would give, either match A or B:
@y
  複数の`reference`によるフィルタリングを行うと、A または B に一致するものを検索します。
@z

@x
  ```console
  $ docker images --filter=reference='busy*:uclibc' --filter=reference='busy*:glibc'

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  busybox             uclibc              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             glibc               21c16b6787c6        5 weeks ago         4.19 MB
  ```
@y
  ```console
  $ docker images --filter=reference='busy*:uclibc' --filter=reference='busy*:glibc'

  REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
  busybox             uclibc              e02e811dd08f        5 weeks ago         1.09 MB
  busybox             glibc               21c16b6787c6        5 weeks ago         4.19 MB
  ```
@z

@x
  ### Format the output
@y
  {: #format-the-output }
  ### フォーマット設定
@z

@x
  The formatting option (`--format`) will pretty print container output
  using a Go template.
@y
  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、コンテナーをわかりやすく出力することができます。
@z

@x
  Valid placeholders for the Go template are listed below:
@y
  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。
@z

@x
  | Placeholder     | Description                              |
  |-----------------|------------------------------------------|
  | `.ID`           | Image ID                                 |
  | `.Repository`   | Image repository                         |
  | `.Tag`          | Image tag                                |
  | `.Digest`       | Image digest                             |
  | `.CreatedSince` | Elapsed time since the image was created |
  | `.CreatedAt`    | Time when the image was created          |
  | `.Size`         | Image disk size                          |
@y
  | プレースホルダー | 内容説明                           |
  |------------------|------------------------------------|
  | `.ID`            | イメージ ID                        |
  | `.Repository`    | イメージリポジトリ                 |
  | `.Tag`           | イメージタグ                       |
  | `.Digest`        | イメージダイジェスト               |
  | `.CreatedSince`  | イメージが生成されてからの経過時刻 |
  | `.CreatedAt`     | イメージが生成された時刻           |
  | `.Size`          | イメージディスクサイズ             |
@z

@x
  When using the `--format` option, the `image` command will either
  output the data exactly as the template declares or, when using the
  `table` directive, will include column headers as well.
@y
  `--format`オプションを利用すると`image`コマンドは、テンプレートが定めるデータを直接出力します。
  また`table`ディレクティブを利用すると、カラムヘッダーも同時に出力されます。
@z

@x
  The following example uses a template without headers and outputs the
  `ID` and `Repository` entries separated by a colon (`:`) for all images:
@y
  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのイメージにおける`ID`、`Repository`の各項目がコロン（`:`）で区切って表示されます。
@z

@x
  ```console
  $ docker images --format "{{.ID}}: {{.Repository}}"

  77af4d6b9913: <none>
  b6fa739cedf5: committ
  78a85c484f71: <none>
  30557a29d5ab: docker
  5ed6274db6ce: <none>
  746b819f315e: postgres
  746b819f315e: postgres
  746b819f315e: postgres
  746b819f315e: postgres
  ```
@y
  ```console
  $ docker images --format "{{.ID}}: {{.Repository}}"

  77af4d6b9913: <none>
  b6fa739cedf5: committ
  78a85c484f71: <none>
  30557a29d5ab: docker
  5ed6274db6ce: <none>
  746b819f315e: postgres
  746b819f315e: postgres
  746b819f315e: postgres
  746b819f315e: postgres
  ```
@z

@x
  To list all images with their repository and tag in a table format you
  can use:
@y
  イメージの一覧をリポジトリ、タグとともに表形式で出力するには、以下のようにします。
@z

@x
  ```console
  $ docker images --format "table {{.ID}}\t{{.Repository}}\t{{.Tag}}"

  IMAGE ID            REPOSITORY                TAG
  77af4d6b9913        <none>                    <none>
  b6fa739cedf5        committ                   latest
  78a85c484f71        <none>                    <none>
  30557a29d5ab        docker                    latest
  5ed6274db6ce        <none>                    <none>
  746b819f315e        postgres                  9
  746b819f315e        postgres                  9.3
  746b819f315e        postgres                  9.3.5
  746b819f315e        postgres                  latest
  ```
@y
  ```console
  $ docker images --format "table {{.ID}}\t{{.Repository}}\t{{.Tag}}"

  IMAGE ID            REPOSITORY                TAG
  77af4d6b9913        <none>                    <none>
  b6fa739cedf5        committ                   latest
  78a85c484f71        <none>                    <none>
  30557a29d5ab        docker                    latest
  5ed6274db6ce        <none>                    <none>
  746b819f315e        postgres                  9
  746b819f315e        postgres                  9.3
  746b819f315e        postgres                  9.3.5
  746b819f315e        postgres                  latest
  ```
@z

@x
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@y
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@z
