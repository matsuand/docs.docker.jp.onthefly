%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker service ls
aliases: list
short: List services
@y
command: docker service ls
aliases: list
short: サービス一覧を表示します。
@z

@x
long: |-
  This command lists services are running in the swarm.
@y
long: |-
  Swarm 内で稼動しているサービスの一覧を表示します。
@z

@x
  > **Note**
  >
  > This is a cluster management command, and must be executed on a swarm
  > manager node. To learn about managers and workers, refer to the
  > [Swarm mode section](https://docs.docker.com/engine/swarm/) in the
  > documentation.
@y
  > **メモ**
  >
  > これはクラスター管理コマンドであるため、Swarm のマネージャーノード上で実行する必要があります。
  > マネージャーノードとワーカーノードについては、本ドキュメントの [Swarm モード](__HOSTURL__/engine/swarm/) を参照してください。
@z

@x
usage: docker service ls [OPTIONS]
pname: docker service
plink: docker_service.yaml
options:
@y
usage: docker service ls [オプション]
pname: docker service
plink: docker_service.yaml
options:
@z

@x
- option: filter
  shorthand: f
  value_type: filter
  description: Filter output based on conditions provided
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: format
  value_type: string
  description: Pretty-print services using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: format
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: Only display IDs
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  On a manager node:
@y
examples: |-
  マネージャーノードで以下を実行します。
@z

@x
  ```console
  $ docker service ls

  ID            NAME      MODE            REPLICAS             IMAGE
  c8wgl7q4ndfd  frontend  replicated      5/5                  nginx:alpine
  dmu1ept4cxcf  redis     replicated      3/3                  redis:3.0.6
  iwe3278osahj  mongo     global          7/7                  mongo:3.3
  hh08h9uu8uwr  job       replicated-job  1/1 (3/5 completed)  nginx:latest
  ```
@y
  ```console
  $ docker service ls

  ID            NAME      MODE            REPLICAS             IMAGE
  c8wgl7q4ndfd  frontend  replicated      5/5                  nginx:alpine
  dmu1ept4cxcf  redis     replicated      3/3                  redis:3.0.6
  iwe3278osahj  mongo     global          7/7                  mongo:3.3
  hh08h9uu8uwr  job       replicated-job  1/1 (3/5 completed)  nginx:latest
  ```
@z

@x
  The `REPLICAS` column shows both the *actual* and *desired* number of tasks for
  the service. If the service is in `replicated-job` or `global-job`, it will
  additionally show the completion status of the job as completed tasks over
  total tasks the job will execute.
@y
  `REPLICAS`欄には、サービスに対するタスク数に関しての **現実の数** と **期待されている数** が示されています。
  そのサービスが`replicated-job`または`global-job`である場合、ジョブ状態に関する追加情報が示されます。
  そこではジョブによる実行予定のタスク総数に対しての、実行済タスク数が示されます。
@z

@x
  ### Filtering
@y
  {: #filtering }
  ### フィルタリング
@z

@x
  The filtering flag (`-f` or `--filter`) format is of "key=value". If there is more
  than one filter, then pass multiple flags (e.g., `--filter "foo=bar" --filter "bif=baz"`)
@y
  フィルターフラグ（`-f`または`--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば`--filter "foo=bar" --filter "bif=baz"`など。）
@z

@x
  The currently supported filters are:
@y
  現在サポートされているフィルターは以下のとおりです。
@z

@x
  * [id](service_ls.md#id)
  * [label](service_ls.md#label)
  * [mode](service_ls.md#mode)
  * [name](service_ls.md#name)
@y
  * [id](service_ls.md#id)
  * [label](service_ls.md#label)
  * [mode](service_ls.md#mode)
  * [name](service_ls.md#name)
@z

@x
  #### id
@y
  {: #id }
  #### id フィルター
@z

@x
  The `id` filter matches all or part of a service's id.
@y
  `id`フィルターはサービス ID の全部または一部を検索します。
@z

@x
  ```console
  $ docker service ls -f "id=0bcjw"
  ID            NAME   MODE        REPLICAS  IMAGE
  0bcjwfh8ychr  redis  replicated  1/1       redis:3.0.6
  ```
@y
  ```console
  $ docker service ls -f "id=0bcjw"
  ID            NAME   MODE        REPLICAS  IMAGE
  0bcjwfh8ychr  redis  replicated  1/1       redis:3.0.6
  ```
@z

@x
  #### label
@y
  {: #label }
  #### label フィルター
@z

@x
  The `label` filter matches services based on the presence of a `label` alone or
  a `label` and a value.
@y
  `label`フィルターは、`label`だけが存在する、あるいは`label`とその値が存在するサービスを検索します。
@z

@x
  The following filter matches all services with a `project` label regardless of
  its value:
@y
  以下のフィルター指定は、ラベル`project`を持つサービスであって、値はどのようなものであっても検索します。
@z

@x
  ```console
  $ docker service ls --filter label=project
  ID            NAME       MODE        REPLICAS  IMAGE
  01sl1rp6nj5u  frontend2  replicated  1/1       nginx:alpine
  36xvvwwauej0  frontend   replicated  5/5       nginx:alpine
  74nzcxxjv6fq  backend    replicated  3/3       redis:3.0.6
  ```
@y
  ```console
  $ docker service ls --filter label=project
  ID            NAME       MODE        REPLICAS  IMAGE
  01sl1rp6nj5u  frontend2  replicated  1/1       nginx:alpine
  36xvvwwauej0  frontend   replicated  5/5       nginx:alpine
  74nzcxxjv6fq  backend    replicated  3/3       redis:3.0.6
  ```
@z

@x
  The following filter matches only services with the `project` label with the
  `project-a` value.
@y
  以下のフィルター指定は、ラベル名が`project`でありその値が`project-a`であるサービスのみ検索します。
@z

@x
  ```console
  $ docker service ls --filter label=project=project-a
  ID            NAME      MODE        REPLICAS  IMAGE
  36xvvwwauej0  frontend  replicated  5/5       nginx:alpine
  74nzcxxjv6fq  backend   replicated  3/3       redis:3.0.6
  ```
@y
  ```console
  $ docker service ls --filter label=project=project-a
  ID            NAME      MODE        REPLICAS  IMAGE
  36xvvwwauej0  frontend  replicated  5/5       nginx:alpine
  74nzcxxjv6fq  backend   replicated  3/3       redis:3.0.6
  ```
@z

@x
  #### mode
@y
  {: #mode }
  #### mode フィルター
@z

@x
  The `mode` filter matches on the mode (either `replicated` or `global`) of a service.
@y
  `mode`フィルターはサービスのモード（`replicated`または`global`）を検索します。
@z

@x
  The following filter matches only `global` services.
@y
  以下のフィルター指定は`global`サービスを検索します。
@z

@x
  ```console
  $ docker service ls --filter mode=global
  ID                  NAME                MODE                REPLICAS            IMAGE
  w7y0v2yrn620        top                 global              1/1                 busybox
  ```
@y
  ```console
  $ docker service ls --filter mode=global
  ID                  NAME                MODE                REPLICAS            IMAGE
  w7y0v2yrn620        top                 global              1/1                 busybox
  ```
@z

@x
  #### name
@y
  {: #name }
  #### name フィルター
@z

@x
  The `name` filter matches on all or part of a service's name.
@y
  `name` フィルターは、サービス名の全部または一部を検索します。
@z

@x
  The following filter matches services with a name containing `redis`.
@y
  以下のフィルター指定では、`redis`という文字列を名前に含んだサービスを検索します。
@z

@x
  ```console
  $ docker service ls --filter name=redis
  ID            NAME   MODE        REPLICAS  IMAGE
  0bcjwfh8ychr  redis  replicated  1/1       redis:3.0.6
  ```
@y
  ```console
  $ docker service ls --filter name=redis
  ID            NAME   MODE        REPLICAS  IMAGE
  0bcjwfh8ychr  redis  replicated  1/1       redis:3.0.6
  ```
@z

@x
  ### Formatting
@y
  {: #formatting }
  ### フォーマット設定
@z

@x
  The formatting options (`--format`) pretty-prints services output
  using a Go template.
@y
  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、サービスをわかりやすく出力することができます。
@z

@x
  Valid placeholders for the Go template are listed below:
@y
  Go 言語テンプレートによるプレースホルダー（placeholder）は、以下のとおりです。
@z

@x
  | Placeholder | Description                             |
  |-------------|-----------------------------------------|
  | `.ID`       | Service ID                              |
  | `.Name`     | Service name                            |
  | `.Mode`     | Service mode (replicated, global)       |
  | `.Replicas` | Service replicas                        |
  | `.Image`    | Service image                           |
  | `.Ports`    | Service ports published in ingress mode |
@y
  | プレースホルダー | 内容説明                                                |
  |------------------|---------------------------------------------------------|
  | `.ID`            | サービス ID。                                           |
  | `.Name`          | サービス名。                                            |
  | `.Mode`          | サービスモード（replicated、global）。                  |
  | `.Replicas`      | サービスレプリカ数。                                    |
  | `.Image`         | サービスイメージ名。                                    |
  | `.Ports`         | ingress モードにおいて公開されているサービスポート番号。|
@z

@x
  When using the `--format` option, the `service ls` command will either
  output the data exactly as the template declares or, when using the
  `table` directive, includes column headers as well.
@y
  `--format`オプションを利用すると`service ls`コマンドは、テンプレートが定めるデータを直接出力します。
  また`table`ディレクティブを利用すると、カラムヘッダーも同時に出力されます。
@z

@x
  The following example uses a template without headers and outputs the
  `ID`, `Mode`, and `Replicas` entries separated by a colon (`:`) for all services:
@y
  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのサービスにおける`ID`、`Mode`、`Replicas`の各項目がコロン（`:`）で区切られて表示されます。
@z

@x
  ```console
  $ docker service ls --format "{{.ID}}: {{.Mode}} {{.Replicas}}"

  0zmvwuiu3vue: replicated 10/10
  fm6uf97exkul: global 5/5
  ```
@y
  ```console
  $ docker service ls --format "{{.ID}}: {{.Mode}} {{.Replicas}}"

  0zmvwuiu3vue: replicated 10/10
  fm6uf97exkul: global 5/5
  ```
@z

@x
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true
@y
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true
@z
