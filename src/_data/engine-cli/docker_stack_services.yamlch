%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker stack services
short: List the services in the stack
@y
command: docker stack services
short: Stack 内のサービスを一覧表示します。
@z

@x
long: |-
  Lists the services that are running as part of the specified stack.
@y
long: |-
  指定された Stack の一部として起動しているサービスを一覧表示します。
@z

@x
  > **Note**
  >
  > This is a cluster management command, and must be executed on a swarm
  > manager node. To learn about managers and workers, refer to the
  > [Swarm mode section](https://docs.docker.com/engine/swarm/) in the
  > documentation.
@y
  > **メモ**
  >
  > これはクラスター管理コマンドです。
  > したがって Swarm 上のマネージャーノードにおいて実行する必要があります。
  > マネージャーノードやワーカーノードについては、[Swarm モード](https://docs.docker.com/engine/swarm/) を参照してください。
@z

@x
usage: docker stack services [OPTIONS] STACK
pname: docker stack
plink: docker_stack.yaml
options:
@y
usage: docker stack services [OPTIONS] STACK
pname: docker stack
plink: docker_stack.yaml
options:
@z

@x
- option: filter
  shorthand: f
  value_type: filter
  description: Filter output based on conditions provided
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: format
  value_type: string
@y
- option: format
  value_type: string
@z

@x
  description: Pretty-print services using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: namespace
  value_type: string
  description: Kubernetes namespace to use
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
@y
- option: namespace
  value_type: string
  description: Kubernetes 名前空間を指定します。
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
@z

@x
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: Only display IDs
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
inherited_options:
@y
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
inherited_options:
@z

@x
- option: kubeconfig
  value_type: string
  description: Kubernetes config file
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
@y
- option: kubeconfig
  value_type: string
  description: Kubernetes 設定ファイルを指定します。
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
@z

@x
- option: orchestrator
  value_type: string
  description: Orchestrator to use (swarm|kubernetes|all)
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: orchestrator
  value_type: string
  description: オーケストレーターを指定します。（swarm|kubernetes|all）
  deprecated: true
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  The following command shows all services in the `myapp` stack:
@y
examples: |-
  以下のコマンドは`myapp`Stack におけるサービスを一覧表示します。
@z

@x
  ```console
  $ docker stack services myapp
@y
  ```console
  $ docker stack services myapp
@z

@x
  ID            NAME            REPLICAS  IMAGE                                                                          COMMAND
  7be5ei6sqeye  myapp_web       1/1       nginx@sha256:23f809e7fd5952e7d5be065b4d3643fbbceccd349d537b62a123ef2201bc886f
  dn7m7nhhfb9y  myapp_db        1/1       mysql@sha256:a9a5b559f8821fe73d58c3606c812d1c044868d42c63817fa5125fd9d8b7b539
  ```
@y
  ID            NAME            REPLICAS  IMAGE                                                                          COMMAND
  7be5ei6sqeye  myapp_web       1/1       nginx@sha256:23f809e7fd5952e7d5be065b4d3643fbbceccd349d537b62a123ef2201bc886f
  dn7m7nhhfb9y  myapp_db        1/1       mysql@sha256:a9a5b559f8821fe73d58c3606c812d1c044868d42c63817fa5125fd9d8b7b539
  ```
@z

@x
  ### Filtering
@y
  {: #filtering }
  ### フィルター検索
@z

@x
  The filtering flag (`-f` or `--filter`) format is a `key=value` pair. If there
  is more than one filter, then pass multiple flags (e.g. `--filter "foo=bar" --filter "bif=baz"`).
  Multiple filter flags are combined as an `OR` filter.
@y
  フィルターフラグ（`-f`または`--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば`--filter "foo=bar" --filter "bif=baz"`など）
  複数のフィルターフラグは`OR`フィルターとして結合されます。
@z

@x
  The following command shows both the `web` and `db` services:
@y
  以下のコマンドは`web`と`db`という 2 つのサービスを表示します。
@z

@x
  ```console
@y
  ```console
@z

@x
  $ docker stack services --filter name=myapp_web --filter name=myapp_db myapp
@y
  $ docker stack services --filter name=myapp_web --filter name=myapp_db myapp
@z

@x
  ID            NAME            REPLICAS  IMAGE                                                                          COMMAND
  7be5ei6sqeye  myapp_web       1/1       nginx@sha256:23f809e7fd5952e7d5be065b4d3643fbbceccd349d537b62a123ef2201bc886f
  dn7m7nhhfb9y  myapp_db        1/1       mysql@sha256:a9a5b559f8821fe73d58c3606c812d1c044868d42c63817fa5125fd9d8b7b539
  ```
@y
  ID            NAME            REPLICAS  IMAGE                                                                          COMMAND
  7be5ei6sqeye  myapp_web       1/1       nginx@sha256:23f809e7fd5952e7d5be065b4d3643fbbceccd349d537b62a123ef2201bc886f
  dn7m7nhhfb9y  myapp_db        1/1       mysql@sha256:a9a5b559f8821fe73d58c3606c812d1c044868d42c63817fa5125fd9d8b7b539
  ```
@z

@x
  The currently supported filters are:
@y
  現在サポートされているフィルターは以下のとおりです。
@z

@x
  * id / ID (`--filter id=7be5ei6sqeye`, or `--filter ID=7be5ei6sqeye`)
    * Swarm: supported
    * Kubernetes: not supported
@y
  * id / ID (`--filter id=7be5ei6sqeye`または`--filter ID=7be5ei6sqeye`)
    * Swarm: 対応済み。
    * Kubernetes: 未対応。
@z

@x
  * label (`--filter label=key=value`)
    * Swarm: supported
    * Kubernetes: supported
@y
  * label (`--filter label=key=value`)
    * Swarm: 対応済み。
    * Kubernetes: 対応済み。
@z

@x
  * mode (`--filter mode=replicated`, or `--filter mode=global`)
    * Swarm: not supported
    * Kubernetes: supported
@y
  * mode (`--filter mode=replicated`または`--filter mode=global`)
    * Swarm: 未対応。
    * Kubernetes: 対応済み。
@z

@x
  * name (`--filter name=myapp_web`)
    * Swarm: supported
    * Kubernetes: supported
@y
  * name (`--filter name=myapp_web`)
    * Swarm: 対応済み。
    * Kubernetes: 対応済み。
@z

@x
  * node (`--filter node=mynode`)
    * Swarm: not supported
    * Kubernetes: supported
@y
  * node (`--filter node=mynode`)
    * Swarm: 未対応。
    * Kubernetes: 対応済み。
@z

@x
  * service (`--filter service=web`)
    * Swarm: not supported
    * Kubernetes: supported
@y
  * service (`--filter service=web`)
    * Swarm: 未対応。
    * Kubernetes: 対応済み。
@z

@x
  ### Formatting
@y
  {: #formatting }
  ### フォーマット設定
@z

@x
  The formatting options (`--format`) pretty-prints services output
  using a Go template.
@y
  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、サービスをわかりやすく出力することができます。
@z

@x
  Valid placeholders for the Go template are listed below:
@y
  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。
@z

@x
  | Placeholder | Description                       |
  |-------------|-----------------------------------|
  | `.ID`       | Service ID                        |
  | `.Name`     | Service name                      |
  | `.Mode`     | Service mode (replicated, global) |
  | `.Replicas` | Service replicas                  |
  | `.Image`    | Service image                     |
@y
  | プレースホルダー | 内容説明                            |
  |------------------|-------------------------------------|
  | `.ID`            | サービス ID                         |
  | `.Name`          | サービス名                          |
  | `.Mode`          | サービスモード（replicated、global）|
  | `.Replicas`      | サービスレプリカ                    |
  | `.Image`         | サービスイメージ                    |
@z

@x
  When using the `--format` option, the `stack services` command will either
  output the data exactly as the template declares or, when using the
  `table` directive, includes column headers as well.
@y
  `--format`オプションを利用すると`stack services`コマンドは、テンプレートが定めるデータを直接出力します。
  また`table`ディレクティブを利用すると、カラムヘッダーも同時に出力されます。
@z

@x
  The following example uses a template without headers and outputs the
  `ID`, `Mode`, and `Replicas` entries separated by a colon (`:`) for all services:
@y
  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのサービスにおける`ID`、`Mode`、`Replicas`の各項目がコロン（`:`）で区切って表示されます。
@z

@x
  ```console
  $ docker stack services --format "{{.ID}}: {{.Mode}} {{.Replicas}}"

  0zmvwuiu3vue: replicated 10/10
  fm6uf97exkul: global 5/5
  ```
@y
  ```console
  $ docker stack services --format "{{.ID}}: {{.Mode}} {{.Replicas}}"

  0zmvwuiu3vue: replicated 10/10
  fm6uf97exkul: global 5/5
  ```
@z

@x
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@y
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@z
