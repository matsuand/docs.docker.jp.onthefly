%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker node ls
aliases: list
short: List nodes in the swarm
@y
command: docker node ls
aliases: list
short: Swarm 内ノードを一覧表示します。
@z

@x
long: |-
  Lists all the nodes that the Docker Swarm manager knows about. You can filter
  using the `-f` or `--filter` flag. Refer to the [filtering](#filtering) section
  for more information about available filter options.
@y
long: |-
  Swarm マネージャーが管理するノードを一覧表示します。
  `-f`または`--filter`フラグを使ってフィルター検索を行うことができます。
  フィルター検索時のオプションの詳細は [フィルター検索](#filtering) の節を参照してください。
@z

@x
  > **Note**
  >
  > This is a cluster management command, and must be executed on a swarm
  > manager node. To learn about managers and workers, refer to the
  > [Swarm mode section](https://docs.docker.com/engine/swarm/) in the
  > documentation.
@y
  > **メモ**
  >
  > これはクラスター管理コマンドであるため、Swarm のマネージャーノード上で実行する必要があります。
  > マネージャーノードとワーカーノードについては、本ドキュメントの [Swarm モード](__HOSTURL__/engine/swarm/) を参照してください。
@z

@x
usage: docker node ls [OPTIONS]
pname: docker node
plink: docker_node.yaml
options:
@y
usage: docker node ls [オプション]
pname: docker node
plink: docker_node.yaml
options:
@z

@x
- option: filter
  shorthand: f
  value_type: filter
  description: Filter output based on conditions provided
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: format
  value_type: string
  description: Pretty-print nodes using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: format
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: Only display IDs
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  ```console
  $ docker node ls

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0    swarm-worker2   Ready   Active
  38ciaotwjuritcdtn9npbnkuz    swarm-worker1   Ready   Active
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
@y
examples: |-
  ```console
  $ docker node ls

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0    swarm-worker2   Ready   Active
  38ciaotwjuritcdtn9npbnkuz    swarm-worker1   Ready   Active
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
@z

@x
  > **Note**
  >
  > In the above example output, there is a hidden column of `.Self` that indicates
  > if the node is the same node as the current docker daemon. A `*` (e.g.,
  > `e216jshn25ckzbvmwlnh5jr3g *`) means this node is the current docker daemon.
@y
  > **メモ**
  >
  > 上の例における出力では、隠れ項目として`.Self`があります。
  > そのノードが、カレントな Docker デーモンとしてのノードであることを表わします。
  > アスタリスク `*`（例では `e216jshn25ckzbvmwlnh5jr3g *`）は、それがカレントな Docker デーモンのノードであることを意味しています。
@z

@x
  ### Filtering
@y
  {: #filtering }
  ### フィルター検索
@z

@x
  The filtering flag (`-f` or `--filter`) format is of "key=value". If there is more
  than one filter, then pass multiple flags (e.g., `--filter "foo=bar" --filter "bif=baz"`)
@y
  フィルターフラグ（`-f`または`--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば`--filter "foo=bar" --filter "bif=baz"`など。）
@z

@x
  The currently supported filters are:
@y
  現在サポートされているフィルターは以下のとおりです。
@z

@x
  * [id](#id)
  * [label](#label)
  * [node.label](#nodelabel)
  * [membership](#membership)
  * [name](#name)
  * [role](#role)
@y
  * [id](#id)
  * [label](#label)
  * [node.label](#nodelabel)
  * [membership](#membership)
  * [name](#name)
  * [role](#role)
@z

@x
  #### id
@y
  {: #id }
  #### id フィルター
@z

@x
  The `id` filter matches all or part of a node's id.
@y
  `id`フィルターは、ノード ID の全部または一部を検索します。
@z

@x
  ```console
  $ docker node ls -f id=1

  ID                         HOSTNAME       STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0  swarm-worker2  Ready   Active
  ```
@y
  ```console
  $ docker node ls -f id=1

  ID                         HOSTNAME       STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0  swarm-worker2  Ready   Active
  ```
@z

@x
  #### label
@y
  {: #label }
  #### label フィルター
@z

@x
  The `label` filter matches nodes based on engine labels and on the presence of a
  `label` alone or a `label` and a value. Engine labels are configured in
  the [daemon configuration](dockerd.md#daemon-configuration-file). To filter on
  Swarm `node` labels, use [`node.label` instead](#nodelabel).
@y
  `label`フィルターは、Engine の`label`だけが存在する、あるいは`label`とその値が存在するノードを検索します。
  Engine ラベルは [デーモン設定](dockerd.md#daemon-configuration-file) において定めます。
  Swarm の`node`ラベルに対しての検索は、これではなく [`node.label`](#nodelabel) を用います。
@z

@x
  The following filter matches nodes with the `foo` label regardless of its value.
@y
  以下の例では`foo`ラベルを持ったノードを抽出します。
  この場合、その値の内容は問いません。
@z

@x
  ```console
  $ docker node ls -f "label=foo"

  ID                         HOSTNAME       STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0  swarm-worker2  Ready   Active
  ```
@y
  ```console
  $ docker node ls -f "label=foo"

  ID                         HOSTNAME       STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0  swarm-worker2  Ready   Active
  ```
@z

@x
  #### node.label
@y
  {: #nodelabel }
  #### node.label フィルター
@z

@x
  The `node.label` filter matches nodes based on node labels and on the presence
  of a `node.label` alone or a `node.label` and a value.
@y
  `node.label`フィルターはノードラベルに対応するノードを検索します。
  `node.label`のみの場合と、`node.label`かつその値を指定した検索が可能です。
@z

@x
  The following filter updates nodes to have a `region` node label:
@y
  以下のフィルターでは、各ノードに対して`region`というノードラベルを設定します。
@z

@x
  ```console
  $ docker node update --label-add region=region-a swarm-test-01
  $ docker node update --label-add region=region-a swarm-test-02
  $ docker node update --label-add region=region-b swarm-test-03
  $ docker node update --label-add region=region-b swarm-test-04
  ```
@y
  ```console
  $ docker node update --label-add region=region-a swarm-test-01
  $ docker node update --label-add region=region-a swarm-test-02
  $ docker node update --label-add region=region-b swarm-test-03
  $ docker node update --label-add region=region-b swarm-test-04
  ```
@z

@x
  Show all nodes that have a `region` node label set:
@y
  `region`というノードラベルを持つノードをすべて検索します。
@z

@x
  ```console
  $ docker node ls --filter node.label=region

  ID                            HOSTNAME        STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
  yg550ettvsjn6g6t840iaiwgb *   swarm-test-01   Ready     Active         Leader           20.10.2
  2lm9w9kbepgvkzkkeyku40e65     swarm-test-02   Ready     Active         Reachable        20.10.2
  hc0pu7ntc7s4uvj4pv7z7pz15     swarm-test-03   Ready     Active         Reachable        20.10.2
  n41b2cijmhifxxvz56vwrs12q     swarm-test-04   Ready     Active                          20.10.2
  ```
@y
  ```console
  $ docker node ls --filter node.label=region

  ID                            HOSTNAME        STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
  yg550ettvsjn6g6t840iaiwgb *   swarm-test-01   Ready     Active         Leader           20.10.2
  2lm9w9kbepgvkzkkeyku40e65     swarm-test-02   Ready     Active         Reachable        20.10.2
  hc0pu7ntc7s4uvj4pv7z7pz15     swarm-test-03   Ready     Active         Reachable        20.10.2
  n41b2cijmhifxxvz56vwrs12q     swarm-test-04   Ready     Active                          20.10.2
  ```
@z

@x
  Show all nodes that have a `region` node label, with value `region-a`:
@y
  `region`というノードラベルを持ち、かつ値として`region-a`を持つものを検索します。
@z

@x
  ```console
  $ docker node ls --filter node.label=region=region-a

  ID                            HOSTNAME        STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
  yg550ettvsjn6g6t840iaiwgb *   swarm-test-01   Ready     Active         Leader           20.10.2
  2lm9w9kbepgvkzkkeyku40e65     swarm-test-02   Ready     Active         Reachable        20.10.2
  ```
@y
  ```console
  $ docker node ls --filter node.label=region=region-a

  ID                            HOSTNAME        STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
  yg550ettvsjn6g6t840iaiwgb *   swarm-test-01   Ready     Active         Leader           20.10.2
  2lm9w9kbepgvkzkkeyku40e65     swarm-test-02   Ready     Active         Reachable        20.10.2
  ```
@z

@x
  #### membership
@y
  {: #membership }
  #### membership フィルター
@z

@x
  The `membership` filter matches nodes based on the presence of a `membership` and a value
  `accepted` or `pending`.
@y
  `membership`フィルターは、`membership`というラベルが存在するノードであって、その値が`accepted`か`pending`であるものを検索します。
@z

@x
  The following filter matches nodes with the `membership` of `accepted`.
@y
  以下の例では、`membership`ラベルにおいて`accepted`が設定されているノードが抽出されます。
@z

@x
  ```console
  $ docker node ls -f "membership=accepted"

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0    swarm-worker2   Ready   Active
  38ciaotwjuritcdtn9npbnkuz    swarm-worker1   Ready   Active
  ```
@y
  ```console
  $ docker node ls -f "membership=accepted"

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0    swarm-worker2   Ready   Active
  38ciaotwjuritcdtn9npbnkuz    swarm-worker1   Ready   Active
  ```
@z

@x
  #### name
@y
  {: #name }
  #### name フィルター
@z

@x
  The `name` filter matches on all or part of a node hostname.
@y
  `name`フィルターは、ノード名の全部または一部を検索します。
@z

@x
  The following filter matches the nodes with a name equal to `swarm-master` string.
@y
  以下のフィルター指定では、`swarm-master`という名前に一致するノードすべてが検索されます。
@z

@x
  ```console
  $ docker node ls -f name=swarm-manager1

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
@y
  ```console
  $ docker node ls -f name=swarm-manager1

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
@z

@x
  #### role
@y
  {: #role }
  #### role フィルター
@z

@x
  The `role` filter matches nodes based on the presence of a `role` and a value `worker` or `manager`.
@y
  `role`フィルターは、`role`というラベルが存在するノードであって、その値が`worker`か`manager`であるものを検索します。
@z

@x
  The following filter matches nodes with the `manager` role.
@y
  以下の例では、`manager`ロールが設定されているノードが抽出されます。
@z

@x
  ```console
  $ docker node ls -f "role=manager"

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
@y
  ```console
  $ docker node ls -f "role=manager"

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
@z

@x
  ### Formatting
@y
  {: #formatting }
  ### フォーマット設定
@z

@x
  The formatting options (`--format`) pretty-prints nodes output
  using a Go template.
@y
  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、ノードをわかりやすく出力することができます。
@z

@x
  Valid placeholders for the Go template are listed below:
@y
  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。
@z

@x
  | Placeholder      | Description                                                                                           |
  |------------------|-------------------------------------------------------------------------------------------------------|
  | `.ID`            | Node ID                                                                                               |
  | `.Self`          | Node of the daemon (`true/false`, `true`indicates that the node is the same as current docker daemon) |
  | `.Hostname`      | Node hostname                                                                                         |
  | `.Status`        | Node status                                                                                           |
  | `.Availability`  | Node availability ("active", "pause", or "drain")                                                     |
  | `.ManagerStatus` | Manager status of the node                                                                            |
  | `.TLSStatus`     | TLS status of the node ("Ready", or "Needs Rotation" has TLS certificate signed by an old CA)         |
  | `.EngineVersion` | Engine version                                                                                        |
@y
  | プレースホルダー | 内容説明                                                                                               |
  |------------------|--------------------------------------------------------------------------------------------------------|
  | `.ID`            | ノード ID。                                                                                            |
  | `.Self`          | デーモンノード。（`true/false`、`true` は現在の Docker デーモンとノードが同一であることを表わす）      |
  | `.Hostname`      | ノードホスト名。                                                                                       |
  | `.Status`        | ノードのステータス。                                                                                   |
  | `.Availability`  | ノードの利用可能性。（"active"、"pause"、"drain"）                                                     |
  | `.ManagerStatus` | ノードのマネージャーのステータス。                                                                     |
  | `.TLSStatus`     | ノードの TLS ステータス。（"Ready"、また "Needs Rotation" は TLS 証明書が古い CA により署名されている）|
  | `.EngineVersion` | Engine バージョン。                                                                                    |
@z

@x
  When using the `--format` option, the `node ls` command will either
  output the data exactly as the template declares or, when using the
  `table` directive, includes column headers as well.
@y
  `--format` オプションを利用すると `node ls` コマンドは、テンプレートが定めるデータを直接出力します。
  また `table` ディレクティブを利用すると、カラムヘッダーも同時に出力されます。
@z

@x
  The following example uses a template without headers and outputs the
  `ID`, `Hostname`, and `TLS Status` entries separated by a colon (`:`) for all
  nodes:
@y
  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのノードにおける `ID`、`Hostname`、`TLS Status` の各項目がコロン（`:`）で区切って表示されます。
@z

@x
  ```console
  $ docker node ls --format "{{.ID}}: {{.Hostname}} {{.TLSStatus}}"

  e216jshn25ckzbvmwlnh5jr3g: swarm-manager1 Ready
  35o6tiywb700jesrt3dmllaza: swarm-worker1 Needs Rotation
  ```
@y
  ```console
  $ docker node ls --format "{{.ID}}: {{.Hostname}} {{.TLSStatus}}"

  e216jshn25ckzbvmwlnh5jr3g: swarm-manager1 Ready
  35o6tiywb700jesrt3dmllaza: swarm-worker1 Needs Rotation
  ```
@z

@x
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true
@y
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true
@z
